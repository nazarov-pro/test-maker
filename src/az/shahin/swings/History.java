/*
 * Copyright 2015 Shaheen Group.
 *
 * Contact by : s0552676097@gmail.com
 * All rights reserved !
 */
package az.shahin.swings;

import az.shahin.other.Admin;
import az.shahin.pojo.AccountPojo;
import az.shahin.pojo.HistoryPojo;
import az.shahin.pojo.TestPojo;
import az.shahin.pojo.TestsPojo;
import az.shahin.sql.AccountSQL;
import az.shahin.sql.TestsSQL;
import az.shahin.tests.FileLOG;
import java.util.List;
import java.awt.Frame;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Shahin Nazarov <s0552676097@gmail.com>
 */
public class History extends javax.swing.JDialog {

    /**
     * Creates new form HightScore
     */
    private final AccountSQL acsql = new AccountSQL();
    private AccountPojo pojoac = new AccountPojo();
    private Frame parent = new Frame();
    private List<HistoryPojo> allitems = new ArrayList<>();

    public History(java.awt.Frame parent, boolean modal, String username) {
        super(parent, modal);
        initComponents();
        this.parent = parent;
        start(username);
    }
    List<HistoryPojo> allitems2 = null;

    public void start(String username) {
        allitems2 = null;
        allitems = new ArrayList<>();
        pojoac = acsql.getAccountPojo(username);
         clearAll.setVisible(false);
        if(Admin.isAdmin(username)){
            clearAll.setVisible(true);
        }
        try {
            allitems2 = new FileLOG().getAllHistory();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(History.class.getName()).log(Level.SEVERE, null, ex);
        }
        int iterator = 0;
        Iterator<HistoryPojo> onetime = allitems2.iterator();
        while (onetime.hasNext()) {
            HistoryPojo pojoone = onetime.next();
            if (pojoone.getUserId() != pojoac.getId()) {
                onetime.remove();
            }
        }
        if (allitems2 != null) {
            List<String> items = new ArrayList<>();
            mainfor:
            for (HistoryPojo pojo : allitems2) {
                if (pojo.getUserId() == pojoac.getId()) {
                    iterator++;
                    String correct = "";
                    if (pojo.getMy().equals("Empty")) {
                        correct = "Not Answered";
                    } else if (pojo.getMy().equals(pojo.getCorrect())) {
                        correct = "Correct";
                    } else {
                        correct = "Wrong";
                    }
                    for (HistoryPojo pojohis : allitems) {
                        if (pojohis.getTestId() == pojo.getTestId()) {
                            continue mainfor;
                        }
                    }
                    allitems.add(pojo);
                    items.add(String.format("%d) (%s) {%s} [%s]", iterator, new TestsSQL().getTestoPjo(pojo.getTestId()).getDescription(), correct, pojo.getTime()));
                }
            }
            lst_details.setListData(items.toArray());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblWarning = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lst_details = new javax.swing.JList();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        txtwrong = new javax.swing.JTextField();
        txtmyans = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtscor = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtcorrectans = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtdate = new javax.swing.JTextField();
        lblpic = new javax.swing.JLabel();
        txttimes = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtcorrect = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtempty = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        clearAll = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("History");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblWarning.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        lblWarning.setForeground(new java.awt.Color(102, 0, 153));
        lblWarning.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWarning.setText("Your History");

        lst_details.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Easy Test Maker", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(102, 0, 153))); // NOI18N
        lst_details.setFont(new java.awt.Font("Verdana", 0, 17)); // NOI18N
        lst_details.setForeground(new java.awt.Color(102, 0, 153));
        lst_details.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lst_details.setToolTipText("");
        lst_details.setAutoscrolls(false);
        lst_details.setInheritsPopupMenu(true);
        lst_details.setPreferredSize(new java.awt.Dimension(400, 250));
        lst_details.setSelectionBackground(new java.awt.Color(204, 153, 255));
        lst_details.setValueIsAdjusting(true);
        lst_details.setVisibleRowCount(0);
        lst_details.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lst_detailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lst_details);

        jSeparator1.setForeground(new java.awt.Color(102, 0, 153));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 0, 153));
        jLabel4.setText("Corrects");

        txtwrong.setEditable(false);
        txtwrong.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        txtwrong.setForeground(new java.awt.Color(102, 0, 153));
        txtwrong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtwrongActionPerformed(evt);
            }
        });
        txtwrong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtwrongKeyPressed(evt);
            }
        });

        txtmyans.setEditable(false);
        txtmyans.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        txtmyans.setForeground(new java.awt.Color(102, 0, 153));

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 0, 153));
        jLabel5.setText("Test Description:");

        txtscor.setEditable(false);
        txtscor.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        txtscor.setForeground(new java.awt.Color(102, 0, 153));

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 0, 153));
        jLabel6.setText("Score :");

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 0, 153));
        jLabel7.setText("Correct Answer :");

        txtcorrectans.setEditable(false);
        txtcorrectans.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        txtcorrectans.setForeground(new java.awt.Color(102, 0, 153));
        txtcorrectans.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcorrectansKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 0, 153));
        jLabel8.setText("Date :");

        txtdate.setEditable(false);
        txtdate.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        txtdate.setForeground(new java.awt.Color(102, 0, 153));

        txttimes.setEditable(false);
        txttimes.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        txttimes.setForeground(new java.awt.Color(102, 0, 153));

        jLabel9.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 0, 153));
        jLabel9.setText("Times :");

        txtcorrect.setEditable(false);
        txtcorrect.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        txtcorrect.setForeground(new java.awt.Color(102, 0, 153));
        txtcorrect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcorrectActionPerformed(evt);
            }
        });
        txtcorrect.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcorrectKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 0, 153));
        jLabel10.setText("Wrongs");

        txtempty.setEditable(false);
        txtempty.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        txtempty.setForeground(new java.awt.Color(102, 0, 153));
        txtempty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemptyActionPerformed(evt);
            }
        });
        txtempty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtemptyKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 0, 153));
        jLabel11.setText("Not_Answered");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 0, 153));
        jButton1.setText("Return Main Menu");
        jButton1.setOpaque(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(102, 0, 153));
        jButton2.setText("Clear My History");
        jButton2.setOpaque(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        clearAll.setBackground(new java.awt.Color(255, 255, 255));
        clearAll.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        clearAll.setForeground(new java.awt.Color(102, 0, 153));
        clearAll.setText("Clear All History*");
        clearAll.setOpaque(false);
        clearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 771, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtmyans, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(txtcorrectans, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(88, 88, 88)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtdate, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtscor, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(txttimes, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(lblpic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jLabel10))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel11))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtwrong, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(txtcorrect, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(txtempty, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(clearAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblpic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtwrong, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtcorrect, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtempty, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtmyans, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtcorrectans, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtscor, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtdate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txttimes, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(clearAll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtwrongKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtwrongKeyPressed

    }//GEN-LAST:event_txtwrongKeyPressed

    private void txtcorrectansKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcorrectansKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcorrectansKeyPressed

    private void lst_detailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lst_detailsMouseClicked
        HistoryPojo pojoes = allitems.get(lst_details.getSelectedIndex());
        int countcorect = 0, countempty = 0, countwrong = 0;
        if (lst_details.getSelectedIndex() > -1) {
            for (HistoryPojo pojoclick : allitems2) {
                if (pojoclick.getTestId() == pojoes.getTestId()) {
                    if (pojoclick.getMy().equals("Empty")) {
                        countempty++;
                    } else if (pojoclick.getMy().equals(pojoclick.getCorrect())) {
                        countcorect++;
                    } else {
                        countwrong++;
                    }
                }
            }
            TestsPojo pojo = new TestsSQL().getTestoPjo(pojoes.getTestId());
            txtmyans.setText(pojo.getDescription());
            txtdate.setText(pojoes.getTime());
            txtcorrectans.setText(pojoes.getCorrect());
            txtscor.setText(String.valueOf(pojo.getScore()));
            txtcorrect.setText(String.valueOf(countcorect));
            txtempty.setText(String.valueOf(countempty));
            txtwrong.setText(String.valueOf(countwrong));
            txttimes.setText(String.valueOf(countwrong + countcorect + countempty));
        }

// TODO add your handling code here:
    }//GEN-LAST:event_lst_detailsMouseClicked

    private void txtwrongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtwrongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtwrongActionPerformed

    private void txtcorrectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcorrectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcorrectActionPerformed

    private void txtcorrectKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcorrectKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcorrectKeyPressed

    private void txtemptyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemptyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemptyActionPerformed

    private void txtemptyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtemptyKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemptyKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String password = JOptionPane.showInputDialog(null, "Please type old password , and confirm operation", "Confirm Operation", JOptionPane.QUESTION_MESSAGE);
        if (password != null && password.equals(pojoac.getPassword())) {
            try {
                new FileLOG().removeMyHistory(pojoac.getId());
                start(pojoac.getUsername());
            } catch (IOException ex) {
                Logger.getLogger(History.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(this, "Your History Sucessfully Clear", "OK", JOptionPane.PLAIN_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Password incorrect", "Wrong Password", JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void clearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAllActionPerformed
        String password = JOptionPane.showInputDialog(null, "Please type old password , and confirm operation", "Confirm Operation", JOptionPane.QUESTION_MESSAGE);
        if (password != null && password.equals(pojoac.getPassword())) {
            new FileLOG().removeFile();
            start(pojoac.getUsername());
            JOptionPane.showMessageDialog(this, "All History Sucessfully Cleared", "OK", JOptionPane.PLAIN_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Password incorrect", "Wrong Password", JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_clearAllActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton clearAll;
    public javax.swing.JButton jButton1;
    public javax.swing.JButton jButton2;
    public javax.swing.JLabel jLabel10;
    public javax.swing.JLabel jLabel11;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JLabel jLabel9;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JSeparator jSeparator1;
    public javax.swing.JLabel lblWarning;
    public javax.swing.JLabel lblpic;
    public javax.swing.JList lst_details;
    public javax.swing.JTextField txtcorrect;
    public javax.swing.JTextField txtcorrectans;
    public javax.swing.JTextField txtdate;
    public javax.swing.JTextField txtempty;
    public javax.swing.JTextField txtmyans;
    public javax.swing.JTextField txtscor;
    public javax.swing.JTextField txttimes;
    public javax.swing.JTextField txtwrong;
    // End of variables declaration//GEN-END:variables
}
