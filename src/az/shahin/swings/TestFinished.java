/*
 * Copyright 2015 Shaheen Group.
 *
 * Contact by : s0552676097@gmail.com
 * All rights reserved !
 */
package az.shahin.swings;

import az.shahin.pojo.HistoryPojo;
import az.shahin.pojo.TestPojo;
import az.shahin.pojo.TestsPojo;
import az.shahin.sql.AccountSQL;
import az.shahin.sql.HighScoreSQL;
import az.shahin.tests.FileLOG;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import java.awt.Frame;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Shahin Nazarov <s0552676097@gmail.com>
 */
public class TestFinished extends javax.swing.JDialog {

    /**
     * Creates new form HightScore
     */
    private String username = "";
    private final HighScoreSQL highScoreSQL = new HighScoreSQL();
    private final List<TestsPojo> testspojo;
    private final List<TestPojo> testpojo;
    private final Map<Integer, Integer> answers;
    private Frame parent = new Frame();

    public TestFinished(java.awt.Frame parent, boolean modal, String username, List<TestsPojo> alltest, List<TestPojo> testspojo, Map<Integer, Integer> answers) {
        super(parent, modal);
        initComponents();
        this.parent = parent;
        this.username = username;
        this.testspojo = alltest;
        this.answers = answers;
        this.testpojo = testspojo;
        start();

    }

    public void start() {
        if (testpojo.isEmpty()) {
            this.dispose();
            this.setVisible(false);
            parent.dispose();
            parent.setVisible(false);
        }
        Vector<String> vektor = new Vector<>();
        List<HistoryPojo> pojoes = new ArrayList<>();
        int score = 0;
        for (int i = 0; i < testspojo.size(); i++) {
            HistoryPojo logpojo = new HistoryPojo();
            String correct;
            int score2 = 0;
            if (answers.get(i) == null || answers.get(i) == 5) {
                correct = "Not Answered";
            } else if (testpojo.get(i).getAnswer() == answers.get(i)) {
                correct = "Right";
                score2 = testspojo.get(i).getScore();
            } else {
                correct = "Wrong";
                score2 = -(testspojo.get(i).getScore() / 3);
            }
            logpojo.setScore(score2);
            logpojo.setUserId(new AccountSQL().getAccountPojo(username).getId());
            logpojo.setTestId(testspojo.get(i).getId());
            logpojo.setTime(testspojo.get(i).getDate().toGMTString());
            logpojo.setMy("Empty");
            if (answers.get(i) != null && answers.get(i)!=-1 && answers.get(i)!=5) {
                logpojo.setMy(testpojo.get(i).getAnswers().get(answers.get(i)));
            }
            logpojo.setCorrect(testpojo.get(i).getAnswers().get(testpojo.get(i).getAnswer()));
            if (testpojo.get(i).getMode() == 2) {
                if (answers.get(i) != null) {
                    logpojo.setMy("Picture Vaiant " +  getString(answers.get(i)));
                }
                logpojo.setCorrect("Picture Vaiant " + getString(testpojo.get(i).getAnswer()));
            }
            pojoes.add(logpojo);
            score += score2;
            vektor.add(String.format("%d ) %s %s Score : %d", (i + 1), testspojo.get(i).getDescription(), correct, score2));
        }
        lst_details.setListData(vektor.toArray());
        lblWarning.setText("Your Score is : " + score);
        highScoreSQL.Update(username, (highScoreSQL.getUserScore(username).getScore() + score));
        writeLog(pojoes);
    }

    private String getString(int index) {
        String convert = null;
        switch (index) {
            case 0:
                convert = "A";
                break;
            case 1:
                convert = "B";
                break;
            case 2:
                convert = "C";
                break;
            case 3:
                convert = "D";
                break;
            case 4:
                convert = "E";
        }
        return convert;
    }

    private void writeLog(List<HistoryPojo> pojoes) {
        try {
            new FileLOG().writeLOG(pojoes);
        } catch (IOException ex) {
            Logger.getLogger(TestFinished.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblWarning = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lst_details = new javax.swing.JList();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tests Finished");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblWarning.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        lblWarning.setForeground(new java.awt.Color(102, 0, 153));
        lblWarning.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWarning.setText("Your Result of Tests");

        lst_details.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Easy Test Maker", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(102, 0, 153))); // NOI18N
        lst_details.setFont(new java.awt.Font("Verdana", 0, 17)); // NOI18N
        lst_details.setForeground(new java.awt.Color(102, 0, 153));
        lst_details.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lst_details.setToolTipText("");
        lst_details.setAutoscrolls(false);
        lst_details.setInheritsPopupMenu(true);
        lst_details.setPreferredSize(new java.awt.Dimension(400, 250));
        lst_details.setSelectionBackground(new java.awt.Color(204, 153, 255));
        lst_details.setValueIsAdjusting(true);
        lst_details.setVisibleRowCount(0);
        jScrollPane1.setViewportView(lst_details);

        jSeparator1.setForeground(new java.awt.Color(102, 0, 153));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 0, 153));
        jButton1.setText("Return Tests");
        jButton1.setOpaque(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblWarning, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestFinished.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestFinished.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestFinished.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestFinished.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TestFinished dialog = new TestFinished(new javax.swing.JFrame(), true, "Test", null, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButton1;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JSeparator jSeparator1;
    public javax.swing.JLabel lblWarning;
    public javax.swing.JList lst_details;
    // End of variables declaration//GEN-END:variables
}
